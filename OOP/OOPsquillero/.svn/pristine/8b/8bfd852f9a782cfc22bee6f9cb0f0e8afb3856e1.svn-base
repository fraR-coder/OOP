/*--------------*-----------------------------------------------------------*\
*|   ######     | CLASS SAMPLE FOR "OBJECT ORIENTED PROGRAMMING" (04JEY)     *
*|  #######     | (c) Jun 2021, Giovanni Squillero <squillero@polito.it>     *
*|  ####   \    | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ *
*|   ##G   c\   | Copying and distributing this file for classroom use,      *
*|   ##     _\  | either with or without modification, are permitted without *
*|   |    _/    | royalties provided that this 9-line comment is preserved.  *
*|   |   _/     | ===> THIS FILE IS OFFERED AS-IS, WITHOUT ANY WARRANTY <=== *
\*--------------*-----------------------------------------------------------*/

package delivery;

import java.util.HashMap;
import java.util.Map;

public class Order {
	private String customerName;
	private Restaurant restaurant;
	private int deliveryTime;
	private int deliveryDistance;
	private Map<Dish, Integer> dishes = new HashMap<>();
	private boolean assigned = false;
	
	public Order(String customerName, Restaurant restaurant, int deliveryTime, int deliveryDistance) {
		this.customerName = customerName;
		this.restaurant = restaurant;
		this.deliveryTime = deliveryTime;
		this.deliveryDistance = deliveryDistance;
	}

	void assignOrder() {
		assigned = true;
	}
	
	boolean isAssigned() {
		return assigned;
	}
	
	boolean isNotAssigned() {
		return !assigned;
	}
	
	String getCustomerName() {
		return customerName;
	}

	void setCustomerName(String customerName) {
		this.customerName = customerName;
	}

	Restaurant getRestaurant() {
		return restaurant;
	}

	void setRestaurant(Restaurant restaurant) {
		this.restaurant = restaurant;
	}

	int getDeliveryTime() {
		return deliveryTime;
	}

	void setDeliveryTime(int deliveryTime) {
		this.deliveryTime = deliveryTime;
	}

	int getDeliveryDistance() {
		return deliveryDistance;
	}

	void setDeliveryDistance(int deliveryDistance) {
		this.deliveryDistance = deliveryDistance;
	}

	void addDish(Dish dish, int quantity) {
		if(!dishes.containsKey(dish))
			dishes.put(dish, quantity);
		else 
			dishes.put(dish, dishes.get(dish) + quantity);
	}
	
}
